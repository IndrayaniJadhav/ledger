# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-06-07 03:59
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('licence', '0003_auto_20160802_0859'),
        ('taggit', '0002_auto_20150616_2121'),
        ('accounts', '0013_auto_20170601_1058'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='AssessmentRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('acceptance_status', models.CharField(choices=[('not_specified', 'Not Specified'), ('accepted', 'Accepted'), ('declined', 'Declined')], default='not_specified', max_length=20, verbose_name='Acceptance Status')),
            ],
        ),
        migrations.CreateModel(
            name='CommunicationsLogEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to', models.CharField(blank=True, max_length=200, verbose_name='To')),
                ('fromm', models.CharField(blank=True, max_length=200, verbose_name='From')),
                ('cc', models.CharField(blank=True, max_length=200, verbose_name='cc')),
                ('type', models.CharField(choices=[('email', 'Email'), ('phone', 'Phone Call'), ('main', 'Mail'), ('person', 'In Person')], default='email', max_length=20)),
                ('reference', models.CharField(blank=True, max_length=100)),
                ('subject', models.CharField(blank=True, max_length=200, verbose_name='Subject / Description')),
                ('text', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DisturbanceLicence',
            fields=[
                ('licence_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='licence.Licence')),
                ('purpose', models.TextField(blank=True)),
                ('additional_information', models.TextField(blank=True)),
                ('compliance_frequency', models.IntegerField(choices=[(-1, 'One off'), (1, 'Monthly'), (3, 'Quarterly'), (6, 'Twice-Yearly'), (12, 'Yearly')], default=-1)),
                ('renewal_sent', models.BooleanField(default=False)),
                ('extracted_fields', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('cover_letter_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cover_letter_document', to='accounts.Document')),
                ('licence_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='licence_document', to='accounts.Document')),
            ],
            bases=('licence.licence',),
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pin_one', models.CharField(blank=True, max_length=50)),
                ('pin_two', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=128, verbose_name='Given name(s)')),
                ('last_name', models.CharField(max_length=128)),
                ('phone_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='phone number')),
                ('mobile_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='mobile number')),
                ('fax_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='fax number')),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='disturbance.Organisation')),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('abn', models.CharField(blank=True, max_length=50, null=True, verbose_name='ABN')),
                ('identification', models.FileField(blank=True, null=True, upload_to='organisation/requests/%Y/%m/%d')),
                ('status', models.CharField(choices=[('with_assessor', 'With Assessor'), ('approved', 'Approved'), ('declined', 'Declined')], default='with_assessor', max_length=100)),
                ('lodgement_date', models.DateTimeField(auto_now_add=True)),
                ('assigned_officer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='org_request_assignee', to=settings.AUTH_USER_MODEL)),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Proposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('proposal_schema', django.contrib.postgres.fields.jsonb.JSONField()),
                ('customer_status', models.CharField(choices=[('temp', 'Temporary'), ('draft', 'Draft'), ('under_review', 'Under Review'), ('id_required', 'Identification Required'), ('returns_required', 'Returns Completion Required'), ('amendment_required', 'Amendment Required'), ('id_and_amendment_required', 'Identification/Amendments Required'), ('id_and_returns_required', 'Identification/Returns Required'), ('returns_and_amendment_required', 'Returns/Amendments Required'), ('id_and_returns_and_amendment_required', 'Identification/Returns/Amendments Required'), ('approved', 'Approved'), ('declined', 'Declined'), ('discarded', 'Discarded')], default='temp', max_length=40, verbose_name='Customer Status')),
                ('lodgement_number', models.CharField(blank=True, default='', max_length=9)),
                ('lodgement_sequence', models.IntegerField(blank=True, default=0)),
                ('lodgement_date', models.DateField(blank=True, null=True)),
                ('processing_status', models.CharField(choices=[('temp', 'Temporary'), ('draft', 'Draft'), ('new', 'New'), ('renewal', 'Renewal'), ('licence_amendment', 'Licence Amendment'), ('ready_for_action', 'Ready for Action'), ('awaiting_applicant_response', 'Awaiting Applicant Response'), ('awaiting_assessor_response', 'Awaiting Assessor Response'), ('awaiting_responses', 'Awaiting Responses'), ('ready_for_conditions', 'Ready for Conditions'), ('ready_to_issue', 'Ready to Issue'), ('issued', 'Issued'), ('declined', 'Declined'), ('discarded', 'Discarded')], default='temp', max_length=30, verbose_name='Processing Status')),
                ('id_check_status', models.CharField(choices=[('not_checked', 'Not Checked'), ('awaiting_update', 'Awaiting Update'), ('updated', 'Updated'), ('accepted', 'Accepted')], default='not_checked', max_length=30, verbose_name='Identification Check Status')),
                ('compliance_check_status', models.CharField(choices=[('not_checked', 'Not Checked'), ('awaiting_returns', 'Awaiting Returns'), ('completed', 'Completed'), ('accepted', 'Accepted')], default='not_checked', max_length=30, verbose_name='Return Check Status')),
                ('character_check_status', models.CharField(choices=[('not_checked', 'Not Checked'), ('accepted', 'Accepted')], default='not_checked', max_length=30, verbose_name='Character Check Status')),
                ('review_status', models.CharField(choices=[('not_reviewed', 'Not Reviewed'), ('awaiting_amendments', 'Awaiting Amendments'), ('amended', 'Amended'), ('accepted', 'Accepted')], default='not_reviewed', max_length=30, verbose_name='Review Status')),
                ('applicant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='proposals', to='disturbance.Organisation')),
                ('assigned_officer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assignee', to=settings.AUTH_USER_MODEL)),
                ('documents', models.ManyToManyField(to='accounts.Document')),
                ('hard_copy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hard_copy', to='accounts.Document')),
                ('previous_application', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='disturbance.Proposal')),
                ('proxy_applicant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disturbance_proxy', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProposalDeclinedDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(blank=True)),
                ('officer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disturbance.Proposal')),
            ],
        ),
        migrations.CreateModel(
            name='ProposalRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('text', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProposalRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disturbance.Proposal')),
            ],
        ),
        migrations.CreateModel(
            name='ProposalType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schema', django.contrib.postgres.fields.jsonb.JSONField()),
                ('activities', taggit.managers.TaggableManager(help_text='A comma-separated list of activities.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Activities')),
                ('site', models.OneToOneField(default='1', on_delete=django.db.models.deletion.CASCADE, to='sites.Site')),
            ],
        ),
        migrations.CreateModel(
            name='ProposalUserAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', models.DateTimeField(auto_now_add=True)),
                ('what', models.TextField()),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disturbance.Proposal')),
                ('who', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('code', models.CharField(max_length=10, unique=True)),
                ('one_off', models.BooleanField(default=False)),
                ('obsolete', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='UserDelegation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disturbance.Organisation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AmendmentRequest',
            fields=[
                ('proposalrequest_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='disturbance.ProposalRequest')),
                ('status', models.CharField(choices=[('requested', 'Requested'), ('amended', 'Amended')], default='requested', max_length=30, verbose_name='Status')),
                ('reason', models.CharField(choices=[('insufficient_detail', 'The information provided was insufficient'), ('missing_information', 'There was missing information'), ('other', 'Other')], default='insufficient_detail', max_length=30, verbose_name='Reason')),
            ],
            bases=('disturbance.proposalrequest',),
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('proposalrequest_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='disturbance.ProposalRequest')),
                ('status', models.CharField(choices=[('awaiting_assessment', 'Awaiting Assessment'), ('assessed', 'Assessed'), ('assessment_expired', 'Assessment Period Expired')], default='awaiting_assessment', max_length=20, verbose_name='Status')),
                ('date_last_reminded', models.DateField(blank=True, null=True)),
                ('comment', models.TextField(blank=True)),
                ('purpose', models.TextField(blank=True)),
                ('assigned_assessor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=('disturbance.proposalrequest',),
        ),
        migrations.CreateModel(
            name='ComplianceRequest',
            fields=[
                ('proposalrequest_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='disturbance.ProposalRequest')),
                ('reason', models.CharField(choices=[('outstanding', 'There are currently outstanding returns for the previous licence'), ('other', 'Other')], default='outstanding', max_length=30, verbose_name='Reason')),
            ],
            bases=('disturbance.proposalrequest',),
        ),
        migrations.CreateModel(
            name='IDRequest',
            fields=[
                ('proposalrequest_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='disturbance.ProposalRequest')),
                ('reason', models.CharField(choices=[('missing', 'There is currently no Photographic Identification uploaded'), ('expired', 'The current identification has expired'), ('not_recognised', 'The current identification is not recognised by the Department of Parks and Wildlife'), ('illegible', 'The current identification image is of poor quality and cannot be made out.'), ('other', 'Other')], default='missing', max_length=30, verbose_name='Reason')),
            ],
            bases=('disturbance.proposalrequest',),
        ),
        migrations.CreateModel(
            name='ProposalLogEntry',
            fields=[
                ('communicationslogentry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='disturbance.CommunicationsLogEntry')),
            ],
            bases=('disturbance.communicationslogentry',),
        ),
        migrations.AddField(
            model_name='proposalrequirement',
            name='requirement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disturbance.Requirement'),
        ),
        migrations.AddField(
            model_name='proposalrequest',
            name='officer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='proposalrequest',
            name='proposal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disturbance.Proposal'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='requirements',
            field=models.ManyToManyField(through='disturbance.ProposalRequirement', to='disturbance.Requirement'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='submitter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disturbance_proposals', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='organisation',
            name='delegates',
            field=models.ManyToManyField(blank=True, related_name='disturbance_organisations', through='disturbance.UserDelegation', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='organisation',
            name='organisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Organisation'),
        ),
        migrations.AddField(
            model_name='disturbancelicence',
            name='proposal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='licences', to='disturbance.Proposal'),
        ),
        migrations.AddField(
            model_name='disturbancelicence',
            name='regions',
            field=models.ManyToManyField(to='disturbance.Region'),
        ),
        migrations.AddField(
            model_name='disturbancelicence',
            name='replaced_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='disturbance.DisturbanceLicence'),
        ),
        migrations.AddField(
            model_name='communicationslogentry',
            name='customer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='communicationslogentry',
            name='documents',
            field=models.ManyToManyField(blank=True, to='accounts.Document'),
        ),
        migrations.AddField(
            model_name='communicationslogentry',
            name='staff',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='staff', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='assessmentrequirement',
            name='requirement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disturbance.Requirement'),
        ),
        migrations.AlterUniqueTogether(
            name='userdelegation',
            unique_together=set([('organisation', 'user')]),
        ),
        migrations.AlterUniqueTogether(
            name='proposalrequirement',
            unique_together=set([('requirement', 'proposal', 'order')]),
        ),
        migrations.AddField(
            model_name='proposallogentry',
            name='proposal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disturbance.Proposal'),
        ),
        migrations.AddField(
            model_name='assessmentrequirement',
            name='assessment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disturbance.Assessment'),
        ),
        migrations.AddField(
            model_name='assessment',
            name='requirements',
            field=models.ManyToManyField(through='disturbance.AssessmentRequirement', to='disturbance.Requirement'),
        ),
        migrations.AlterUniqueTogether(
            name='assessmentrequirement',
            unique_together=set([('requirement', 'assessment', 'order')]),
        ),
    ]
